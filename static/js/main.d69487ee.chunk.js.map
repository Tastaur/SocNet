{"version":3,"sources":["component/NavBar/NavBar.module.css","redux/dialogReducer.js","utils/objects-helpers.js","redux/usersReducer.js","component/NavBar/SideBar/SideBarItem/SideBarItem.module.css","component/common/preloader/Preloader.module.css","assets/images/Spinner-1s-200px.svg","component/LoginPage/LoginPage.module.css","API/api.js","component/Login/Login.module.css","serviceWorker.js","component/NavBar/SideBar/SideBarItem/SideBarItem.jsx","component/NavBar/SideBar/SideBar.jsx","component/NavBar/SideBar/SideBarContainer.jsx","component/NavBar/NavBar.jsx","component/Header/Header.jsx","redux/authReducer.js","component/Header/HeaderContainer.jsx","component/Login/Login.jsx","redux/appReducer.js","component/LoginPage/LoginPage.jsx","redux/musicReducer.js","redux/newsReducer.js","redux/sideBarReducer.js","redux/reduxStore.js","App.js","HOC/withSuspense.jsx","index.js","component/common/preloader/Preloader.jsx","utils/validators/validator.js","component/Header/Header.module.css","component/common/Forms/FormsControl.js","component/NavBar/SideBar/SideBar.module.css","component/common/Forms/FormsControl.module.css","redux/profileReducer.js"],"names":["module","exports","initialState","messagesData","id","message","myMessage","dialogsData","name","src","sendNewMessage","newMessageBody","type","dialogsReducer","state","action","body","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","users","pageSize","totalCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","getUsers","dispatch","a","userAPI","getUser","data","count","followUnfollowFlow","apiMethhod","actionCreator","resultCode","follow","followUser","bind","unfollow","unfollowUser","usersReducer","followed","filter","instance","axios","withCredentials","baseURL","headers","get","then","response","delete","post","profileAPI","setUser","getStatus","updateStatus","newStatus","put","status","authApi","submit","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","SideBarItem","props","className","classes","item","SideBar","sideBarElements","sideEl","key","bar","barItem","compose","connect","sideBarPage","NavBar","nav","activeClassName","active","to","sidebar","SideBarContainer","Header","header","loginBlock","isAuth","onClick","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","this","React","Component","auth","maxLength20","maxLengthCreator","minLength2","minLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","loginForm","Field","loginInput","component","Input","validate","placeholder","required","lastRow","formSumError","button","messages","length","stopSubmit","_error","loginContainer","loginTitle","formData","initialized","appReducer","LoginPage","page","artist","song","musicReducer","text","newsReducer","sideBraReducer","reducers","combineReducers","messagesPage","profilePage","profileReducer","music","news","usersPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","MusicContainer","NewsContainer","Setting","UsersContainer","ProfileContainer","App","initializeApp","path","render","fallback","Preloader","AppContainer","withRouter","promise","Promise","all","SocNetApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","preloader","alt","value","maxLength","minLength","test","undefined","Element","input","meta","hasError","touched","formControl","Textarea","ADD_POST","posts","likeCount","profile","addPost","newPostBody","setStatus","getUserProfile","getUserStatus","Math","random","toFixed","p"],"mappings":"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","file":"static/js/main.d69487ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__Kex66\",\"item\":\"NavBar_item__2AfsR\",\"active\":\"NavBar_active__yTYU5\"};","const ADD_NEW_MESSAGE = 'dialog/ADD-NEW-MESSAGE'\r\n\r\nlet initialState = {\r\n  messagesData: [\r\n    {id: 1, message: 'Hi', myMessage: true},\r\n    {id: 2, message: 'How are you?', myMessage: true},\r\n    {id: 3, message: 'All right?', myMessage: false},\r\n    {id: 4, message: 'Good luck!', myMessage: true},\r\n  ],\r\n  dialogsData: [\r\n    {id: 1, name: 'Vasya', src: 'https://ae01.alicdn.com/kf/HTB1UBilQFXXXXa6XFXXq6xXFXXXy.jpg'},\r\n    {\r\n      id: 2,\r\n      name: 'Petya',\r\n      src: 'https://www.pinclipart.com/picdir/middle/227-2277072_marvel-daredevil-clipart-vector-png-download.png',\r\n    },\r\n    {id: 3, name: 'Fedya', src: 'https://i.pinimg.com/originals/f0/cb/bf/f0cbbfd1f5de237d2b51ae420ccfc06e.png'},\r\n    {id: 4, name: 'Sasha', src: 'https://img.elo7.com.br/product/zoom/B0E008/escudo-homem-de-ferro-avulso-herois.jpg'},\r\n    {id: 5, name: 'Valera', src: 'https://cdn0.iconfinder.com/data/icons/famous-character-vol-1-colored/48/JD-14-512.png'},\r\n    {\r\n      id: 6,\r\n      name: 'Vanya',\r\n      src: 'https://cdn4.iconfinder.com/data/icons/famous-characters-add-on-vol-1-flat/48/Famous_Character_-_Add_On_1-16-512.png',\r\n    },\r\n  ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case ADD_NEW_MESSAGE:\r\n      let body =action.newMessageBody\r\n      return {\r\n        ...state,\r\n        newMessageBody: '',\r\n        messagesData: [...state.messagesData, {id: 4, myMessage: false, message: body}],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const sendNewMessage = (newMessageBody) => ({type: ADD_NEW_MESSAGE,newMessageBody})\r\n\r\nexport default dialogsReducer\r\n","export let updateObjectInArray = (items, itemId,objPropName, newObjProps) =>{\r\n  return items.map(u => {\r\n    if (u[objPropName] === itemId) {\r\n      return {...u, ...newObjProps}\r\n    }\r\n    return u\r\n  })\r\n}\r\n","import {userAPI} from '../API/api'\r\nimport {updateObjectInArray} from '../utils/objects-helpers'\r\n\r\nconst FOLLOW = 'users/FOLLOW'\r\nconst UNFOLLOW = 'users/UNFOLLOW'\r\nconst SET_USERS = 'users/SET_USERS'\r\nconst SET_TOTAL_COUNT_USERS = 'users/SET_TOTAL_COUNT_USERS'\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE'\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', {followed: true}),\r\n      }\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', {followed: false}),\r\n      }\r\n    case SET_CURRENT_PAGE:\r\n      return {...state, currentPage: action.currentPage}\r\n    case SET_USERS: {\r\n      return {...state, users: action.users}\r\n    }\r\n    case SET_TOTAL_COUNT_USERS:\r\n      return {...state, totalCount: action.count}\r\n    case TOGGLE_IS_FETCHING:\r\n      return {...state, isFetching: action.isFetching}\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching ?\r\n            [...state.followingInProgress, action.userId]\r\n            : state.followingInProgress.filter(id => id != action.userId),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setTotalUserCount = (count) => ({type: SET_TOTAL_COUNT_USERS, count})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n})\r\n\r\nexport const getUsers = (currentPage, pageSize) => async (dispatch) => {\r\n  dispatch(setCurrentPage(currentPage))\r\n  dispatch(toggleIsFetching(true))\r\n  let data = await userAPI.getUser(currentPage, pageSize)\r\n\r\n  dispatch(setUsers(data.items))\r\n  dispatch(setTotalUserCount(data.totalCount))\r\n  dispatch(toggleIsFetching(false))\r\n\r\n}\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethhod, actionCreator) => {\r\n  dispatch(toggleFollowingInProgress(true, userId))\r\n  let data = await apiMethhod(userId)\r\n  if (data.resultCode == 0) {\r\n    dispatch(actionCreator(userId))\r\n  }\r\n  dispatch(toggleFollowingInProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n  followUnfollowFlow(dispatch, userId, userAPI.followUser.bind(userAPI), followSuccess)\r\n\r\n}\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n  followUnfollowFlow(dispatch, userId, userAPI.unfollowUser.bind(userAPI), unfollowSuccess)\r\n\r\n}\r\n\r\n\r\nexport default usersReducer\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SideBarItem_item__3BxKv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1rcf4\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.7e632128.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"LoginPage_page__2V3E0\"};","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n  headers: {\r\n    'API-KEY': 'bd677eaf-5fbe-4157-bb5b-0038b3fdbdfc',\r\n  },\r\n})\r\n\r\nexport const userAPI = {\r\n  getUser(currentPage, pageSize= 80) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n      return response.data\r\n    })\r\n  },\r\n  unfollowUser(id) {\r\n    return instance.delete(`follow/${id}`).then(response => {\r\n      return response.data\r\n    })\r\n  },\r\n  followUser(id) {\r\n    return instance.post(`follow/${id}`).then(response => {\r\n      return response.data\r\n    })\r\n  },\r\n}\r\n\r\nexport const profileAPI = {\r\n  setUser(userId) {\r\n    return instance.get(`profile/${userId}`).then(response => {\r\n      return response.data\r\n    })\r\n  },\r\n  getStatus(userId){\r\n    return instance.get(`profile/status/${userId}`).then(response =>{\r\n      return response.data\r\n    })\r\n  },\r\n  updateStatus(newStatus){\r\n    return instance.put(`profile/status`, {status:newStatus})\r\n  }\r\n}\r\n\r\nexport const authApi = {\r\n  submit() {\r\n    return instance.get(`auth/me`).then(response => {\r\n      return response.data\r\n    })\r\n  },\r\n  login(email, password, rememberMe = false){\r\n    return instance.post(`auth/login`, {email, password, rememberMe})\r\n  },\r\n  logout(){\r\n    return instance.delete(`auth/login`)\r\n  }\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSumError\":\"Login_formSumError__2JUNI\",\"lastRow\":\"Login_lastRow__yuEP2\",\"loginContainer\":\"Login_loginContainer__2Z9oL\",\"loginTitle\":\"Login_loginTitle__1fLBx\",\"loginForm\":\"Login_loginForm__1Qp35\",\"loginInput\":\"Login_loginInput__28-pT\",\"button\":\"Login_button__2tLHa\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport classes from './SideBarItem.module.css'\r\n\r\nconst SideBarItem = (props) => {\r\n  return <div className={classes.item}>\r\n    <div>\r\n      <img src={props.src}/>\r\n    </div>\r\n    <p>{props.name}</p>\r\n  </div>\r\n}\r\n\r\nexport default SideBarItem\r\n","import React from 'react'\r\nimport classes from './SideBar.module.css'\r\nimport SideBarItem from './SideBarItem/SideBarItem'\r\n\r\nconst SideBar = (props) => {\r\n  let sideBarElements = props.state\r\n      .map(sideEl => <SideBarItem id={sideEl.id} key={sideEl.id} name={sideEl.name} src={sideEl.src}/>)\r\n  return <div className={classes.bar}>\r\n    <div>\r\n      <p>Friends</p>\r\n    </div>\r\n    <div className={classes.barItem}>\r\n      {sideBarElements}\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default SideBar\r\n","import React from 'react'\r\nimport SideBar from './SideBar'\r\nimport {connect} from 'react-redux'\r\nimport {compose} from 'redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    state: state.sideBarPage,\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(SideBar)\r\n","import React from 'react'\r\nimport classes from './NavBar.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport SideBarContainer from './SideBar/SideBarContainer'\r\n\r\nconst NavBar = (props) => {\r\n  return <nav className={classes.nav}>\r\n    <div className={classes.item}>\r\n      <NavLink activeClassName={classes.active} to='/profile'>Profile</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n      <NavLink activeClassName={classes.active} to='/dialogs'>Dialogs</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n      <NavLink activeClassName={classes.active} to='/news'>News</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n      <NavLink activeClassName={classes.active} to='/music'>Music</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n      <NavLink activeClassName={classes.active} to='/settings'>Settings</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n      <NavLink activeClassName={classes.active} to='/users'>Users</NavLink>\r\n    </div>\r\n    <div className={classes.sidebar}>\r\n      <SideBarContainer state={props.state}/>\r\n    </div>\r\n  </nav>\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport classes from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n  return <header className={classes.header}>\r\n    <img src=\"https://gonki-na-android.ru/uploads/posts/2015-03/1427120788_97374123.png\"/>\r\n\r\n    <div className={classes.loginBlock}>\r\n      {props.isAuth\r\n          ? <div>{props.login}  <button onClick={props.logout} className={classes.logout}> Logout</button></div>\r\n          : <NavLink to={'/login'} activeClassName={classes.active}>Login</NavLink>}\r\n    </div>\r\n  </header>\r\n}\r\n\r\nexport default Header\r\n","import {authApi} from '../API/api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA'\r\n\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  login: null,\r\n  email: null,\r\n  isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let data = await authApi.submit()\r\n  if (data.resultCode === 0) {\r\n    let {id, email, login} = data.data\r\n    dispatch(setAuthUserData(id, email, login, true))\r\n  }\r\n\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let response = await authApi.login(email, password, rememberMe)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData())\r\n  } else {\r\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Email or Password is wrong'\r\n    dispatch(stopSubmit('login', {_error: message}))\r\n  }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authApi.logout()\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false))\r\n  }\r\n}\r\n\r\nexport default authReducer\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../redux/authReducer'\r\nimport {compose} from 'redux'\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n  render() {\r\n    return <Header {...this.props}/>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logout}))\r\n    (HeaderContainer)\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../../redux/authReducer'\r\nimport {email, maxLengthCreator, minLengthCreator, required} from '../../utils/validators/validator'\r\nimport {Input} from '../common/Forms/FormsControl'\r\nimport {Redirect} from 'react-router-dom'\r\nimport classes from './Login.module.css'\r\n\r\n\r\nconst maxLength20 = maxLengthCreator(20)\r\nconst minLength2 = minLengthCreator(2)\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n  return (\r\n      <form onSubmit={handleSubmit} className={classes.loginForm}>\r\n        <div><Field className={classes.loginInput} component={Input} validate={email} name={'email'} placeholder={`E-mail`}/>\r\n        </div>\r\n        <div><Field component={Input}\r\n                    validate={[required, maxLength20, minLength2]}\r\n                    type={`password`}\r\n                    name={'password'}\r\n                    placeholder={`Password`}\r\n                    className={classes.loginInput}\r\n        /></div>\r\n        <div className={classes.lastRow}><Field component={Input} name={'rememberMe'} type={'checkbox'}/> <span>Remember me</span>\r\n        </div>\r\n        {error && <div className={classes.formSumError}>\r\n          {error}\r\n        </div>}\r\n        <div>\r\n          <button className={classes.button}>Login</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\nconst LoginReduxForm = reduxForm({\r\n  form: 'login',\r\n})(LoginForm)\r\n\r\n\r\nconst Login = ({login, isAuth}) => {\r\n  const onSubmit = (formData) => {\r\n    login(formData.email, formData.password, formData.rememberMe)\r\n  }\r\n  if (isAuth) {\r\n    return <Redirect to={'/profile'}/>\r\n  }\r\n  return <div className={classes.loginContainer}>\r\n    <h1 className={classes.loginTitle}>Wellcome to social network</h1>\r\n    <LoginReduxForm onSubmit={onSubmit}/>\r\n  </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)\r\n","import {getAuthUserData} from './authReducer'\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const initializedSuccess = () => ({\r\n  type: INITIALIZED_SUCCESS,\r\n})\r\nexport const initializeApp = () => (dispatch) =>{\r\n let promise =  dispatch(getAuthUserData())\r\n  Promise.all([promise]).then(()=>{\r\n    dispatch(initializedSuccess())\r\n  })\r\n}\r\n\r\n\r\nexport default appReducer\r\n","import React from 'react'\r\nimport classes from './LoginPage.module.css'\r\nimport Login from '../Login/Login'\r\n\r\nconst LoginPage = (props) => {\r\n  return <div className={classes.page}>\r\n    <Login/>\r\n  </div>\r\n}\r\n\r\nexport default LoginPage\r\n","let initialState = [{id: 1, artist: 'Little big', song: 'Skibidi'},\r\n    {id: 2, artist: 'The Hatters', song: 'Russian Style'},\r\n    {id: 3, artist: 'Chuck Berry', song: 'You never can tall'},\r\n    {id: 4, artist: 'Big Russian Boss', song: 'Big Russian Boss'},\r\n    {id: 5, artist: 'Ska-P', song: 'Ni-Fu-Ni-Fa'},\r\n    {id: 6, artist: 'Unknow', song: 'Unknow'},]\r\n\r\nconst musicReducer = (state = initialState, action) => {\r\n  return state\r\n};\r\nexport default musicReducer\r\n","let initialState= [\r\n  {id: 1, text: 'Vasya'},\r\n  {id: 2, text: 'Petya'},\r\n  {id: 3, text: 'Fedya'},\r\n  {id: 4, text: 'Sasha'},\r\n]\r\n\r\nconst newsReducer = (state = initialState, action) =>{\r\n\r\n\r\n  return state\r\n}\r\n\r\nexport default newsReducer;\r\n","let initialState = [{id: 1, name: 'Vasya', src: 'https://ae01.alicdn.com/kf/HTB1UBilQFXXXXa6XFXXq6xXFXXXy.jpg'},\r\n  {\r\n    id: 2,\r\n    name: 'Petya',\r\n    src: 'https://www.pinclipart.com/picdir/middle/227-2277072_marvel-daredevil-clipart-vector-png-download.png',\r\n  },\r\n  {id: 3, name: 'Fedya', src: 'https://i.pinimg.com/originals/f0/cb/bf/f0cbbfd1f5de237d2b51ae420ccfc06e.png'}]\r\n\r\nconst sideBraReducer = (state = initialState, action) => {\r\n\r\n\r\n  return state\r\n}\r\n\r\nexport default sideBraReducer\r\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\r\nimport profileReducer from './profileReducer'\r\nimport dialogsReducer from './dialogReducer'\r\nimport musicReducer from './musicReducer'\r\nimport newsReducer from './newsReducer'\r\nimport sideBraReducer from './sideBarReducer'\r\nimport usersReducer from './usersReducer'\r\nimport authReducer from './authReducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from './appReducer'\r\n\r\nlet reducers = combineReducers({\r\n  messagesPage: dialogsReducer,\r\n  profilePage: profileReducer,\r\n  music: musicReducer,\r\n  news: newsReducer,\r\n  sideBarPage: sideBraReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\nwindow.store = store\r\n\r\nexport default store\r\n","import React, {Component, Suspense} from 'react'\r\nimport './App.css'\r\nimport NavBar from './component/NavBar/NavBar'\r\nimport {BrowserRouter, HashRouter, Route, withRouter} from 'react-router-dom'\r\nimport HeaderContainer from './component/Header/HeaderContainer'\r\nimport Login from './component/Login/Login'\r\nimport {connect, Provider} from 'react-redux'\r\nimport {compose} from 'redux'\r\nimport {initializeApp} from './redux/appReducer'\r\nimport Preloader from './component/common/preloader/Preloader'\r\nimport LoginPage from './component/LoginPage/LoginPage'\r\nimport store from './redux/reduxStore'\r\nimport {withSuspense} from './HOC/withSuspense'\r\n\r\nconst DialogsContainer = React.lazy(() => import('./component/Dialogs/DialogsContainer'))\r\nconst MusicContainer = React.lazy(() => import('./component/Music/MusicContainer'))\r\nconst NewsContainer = React.lazy(() => import('./component/News/NewsContainer'))\r\nconst Setting = React.lazy(() => import('./component/Setting/Setting'))\r\nconst UsersContainer = React.lazy(() => import('./component/Users/UsersContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./component/Profile/ProfileContainer'))\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp()\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.props.initialized) {\r\n      return <Preloader/>\r\n    }\r\n    if (!this.props.isAuth) {\r\n      return <LoginPage/>\r\n    }\r\n    return (\r\n        <div className=\"appWrapper\">\r\n          <HeaderContainer/>\r\n          <NavBar/>\r\n          <div className=\"appWrapperContent\">\r\n            <Route path='/profile/:userId?'\r\n                   render={withSuspense(ProfileContainer)}\r\n            />\r\n            <Suspense fallback={<Preloader/>}>\r\n              <Route path='/dialogs'\r\n                     render={() => <DialogsContainer/>}\r\n              />\r\n              <Route path='/music'\r\n                     render={() => <MusicContainer/>}\r\n              />\r\n              <Route path='/settings'\r\n                     render={() => <Setting/>}\r\n              />\r\n              <Route path='/news'\r\n                     render={() => <NewsContainer/>}\r\n              />\r\n              <Route path='/users' render={() => <UsersContainer/>}/>\r\n            </Suspense>\r\n            <Route path='/login' render={() => <Login/>}/>\r\n\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialized: state.app.initialized,\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n}\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App)\r\n\r\nconst SocNetApp = (props) => {\r\n  return (\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <Provider store={store}>\r\n          <AppContainer/>\r\n        </Provider>\r\n      </HashRouter>)\r\n}\r\nexport default SocNetApp\r\n","import React, {Suspense} from 'react'\r\nimport Preloader from '../component/common/preloader/Preloader'\r\n\r\nexport const withSuspense = (Component) => {\r\n  return (props)=> {\r\n    return <Suspense fallback={<Preloader/>}>\r\n      <Component {...props}/>\r\n    </Suspense>\r\n  }\r\n}\r\n","import React from 'react'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport ReactDOM from 'react-dom'\r\nimport SocNetApp from './App'\r\n\r\n\r\nReactDOM.render(\r\n    <SocNetApp/>,\r\n    document.getElementById('root'),\r\n)\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n\r\n//data\r\n","import React from 'react'\r\nimport classes from './Preloader.module.css'\r\nimport preloader from '../../../assets/images/Spinner-1s-200px.svg'\r\n\r\nlet Preloader = (props) =>{\r\n  return <div className={classes.preloader}> <img src={preloader} alt='preloader'/> </div>\r\n}\r\n\r\nexport default Preloader\r\n","export const required = value =>{\r\n  if(value) return undefined;\r\n   return 'Field is required';\r\n};\r\n\r\n\r\n\r\nexport const maxLengthCreator = (maxLength)=> value =>{\r\n  if(value.length > maxLength) return `Max length is ${maxLength} symbol`;\r\n\r\n   return undefined;\r\n\r\n}\r\nexport const minLengthCreator = (minLength)=> value =>{\r\n  if(value.length < minLength) return `Min length is ${minLength} symbol`;\r\n\r\n  return undefined;\r\n\r\n}\r\nexport const email = value =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n        ? 'Invalid email address'\r\n        : undefined\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2sIav\",\"loginBlock\":\"Header_loginBlock__zVPbD\",\"active\":\"Header_active__1G5IF\",\"logout\":\"Header_logout__3cpn7\"};","import React from 'react'\r\nimport classes from './FormsControl.module.css'\r\n\r\n\r\nconst Element = Element => ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n      <div className={ classes.formControl + \" \" + (hasError ? classes.error : \"\") }>\r\n        <Element {...input} {...props} />\r\n        <div>\r\n          { hasError && <span> { meta.error } </span> }\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\nexport const Textarea = Element('textarea')\r\n\r\nexport const Input = Element('input')\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barItem\":\"SideBar_barItem__2XK9y\",\"bar\":\"SideBar_bar__2pRuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControl_error__3H7NV\",\"formControl\":\"FormsControl_formControl__25PTg\"};","import {profileAPI} from '../API/api'\r\n\r\nconst ADD_POST = 'profile/ADD-POST'\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE'\r\nconst SET_STATUS = 'profile/SET_STATUS'\r\nconst DELETE_POST = 'profile/DELETE_POST'\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, message: 'Hello, this my first post', likeCount: 5},\r\n    {id: 2, message: 'I do that page for training my skiil on JS and React', likeCount: 10},\r\n  ],\r\n  profile: null,\r\n  status: '',\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let text = action.newPostBody\r\n      return {\r\n        ...state,\r\n        posts: [{id: 6, likeCount: Math.random().toFixed(1) * 10, message: text}, ...state.posts],\r\n      }\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      }\r\n    }\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      }\r\n    }\r\n    case DELETE_POST: {\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(p => p.id !== action.id),\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const addPost = (newPostBody) => ({type: ADD_POST, newPostBody})\r\nexport const deletePost = (id) => ({type: DELETE_POST, id})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let data = await profileAPI.setUser(userId)\r\n  dispatch(setUserProfile(data))\r\n}\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n  let data = await profileAPI.getStatus(userId)\r\n  dispatch(setStatus(data))\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status)\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status))\r\n  }\r\n}\r\n\r\nexport default profileReducer\r\n"],"sourceRoot":""}