{"version":3,"sources":["API/api.js","redux/dialogReducer.js","utils/objects-helpers.js","redux/usersReducer.js","component/NavBar/SideBar/SideBarItem/SideBarItem.module.css","component/NavBar/NavBar.module.css","component/common/preloader/Preloader.module.css","assets/images/Spinner-1s-200px.svg","component/LoginPage/LoginPage.module.css","component/Login/Login.module.css","serviceWorker.js","component/NavBar/SideBar/SideBarItem/SideBarItem.jsx","component/NavBar/SideBar/SideBar.jsx","component/NavBar/SideBar/SideBarContainer.jsx","component/NavBar/NavBar.jsx","component/Header/Header.jsx","redux/authReducer.js","component/Header/HeaderContainer.jsx","component/Login/Login.jsx","redux/appReducer.js","component/LoginPage/LoginPage.jsx","redux/musicReducer.js","redux/newsReducer.js","redux/sideBarReducer.js","redux/reduxStore.js","App.js","index.js","utils/validators/validator.js","component/common/Forms/FormsControl.js","component/Header/Header.module.css","component/common/preloader/Preloader.jsx","component/NavBar/SideBar/SideBar.module.css","component/common/Forms/FormsControl.module.css","redux/profileReducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","userAPI","getUser","currentPage","pageSize","get","then","response","data","unfollowUser","id","delete","followUser","post","profileAPI","setUser","userId","getStatus","updateStatus","newStatus","put","status","savePhoto","newPhoto","formData","FormData","append","saveProfile","profile","authApi","submit","login","email","password","rememberMe","captcha","logout","securityApi","getCaptcha","initialState","messagesData","message","myMessage","dialogsData","name","src","sendNewMessage","newMessageBody","type","dialogsReducer","state","action","body","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","users","totalCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","getUsers","dispatch","a","count","followUnfollowFlow","apiMethhod","actionCreator","resultCode","follow","bind","unfollow","usersReducer","followed","filter","module","exports","Boolean","window","location","hostname","match","SideBarItem","props","className","classes","item","SideBar","sideBarElements","sideEl","key","bar","barItem","compose","connect","sideBarPage","NavBar","nav","activeClassName","active","to","sidebar","SideBarContainer","Header","header","loginBlock","isAuth","onClick","captchaUrl","setAuthUserData","payload","getCaptchaUrl","getAuthUserData","setCaptcha","url","authReducer","HeaderContainer","this","React","Component","auth","maxLength20","maxLengthCreator","minLength2","minLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","loginForm","Field","loginInput","component","Input","validate","placeholder","required","lastRow","formSumError","alt","button","messages","length","stopSubmit","_error","loginContainer","loginTitle","initialized","appReducer","LoginPage","page","artist","song","musicReducer","text","newsReducer","sideBraReducer","reducers","combineReducers","messagesPage","profilePage","profileReducer","music","news","usersPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","MusicContainer","NewsContainer","Setting","UsersContainer","ProfileContainer","App","catchAllUnhandleError","reason","promise","alert","initializeApp","addEventListener","removeEventListener","fallback","Preloader","exact","path","render","AppContainer","withRouter","Promise","all","SocNetApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","value","maxLength","minLength","test","undefined","Element","input","meta","hasError","touched","formControl","Textarea","preloader","ADD_POST","posts","likeCount","profileUpdate","addPost","newPostBody","setStatus","changeProfileSuccess","getUserProfile","getUserStatus","log","file","photos","getState","reject","Math","random","toFixed","p"],"mappings":"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","file":"static/js/main.db2b98c7.chunk.js","sourcesContent":["import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n  headers: {\r\n    'API-KEY': 'bd677eaf-5fbe-4157-bb5b-0038b3fdbdfc',\r\n  },\r\n})\r\n\r\nexport const userAPI = {\r\n  getUser(currentPage, pageSize = 80) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n      return response.data\r\n    })\r\n  },\r\n  unfollowUser(id) {\r\n    return instance.delete(`follow/${id}`).then(response => {\r\n      return response.data\r\n    })\r\n  },\r\n  followUser(id) {\r\n    return instance.post(`follow/${id}`).then(response => {\r\n      return response.data\r\n    })\r\n  },\r\n}\r\n\r\nexport const profileAPI = {\r\n  setUser(userId) {\r\n    return instance.get(`profile/${userId}`).then(response => {\r\n      return response.data\r\n    })\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`).then(response => {\r\n      return response.data\r\n    })\r\n  },\r\n  updateStatus(newStatus) {\r\n    return instance.put(`profile/status`, {status: newStatus})\r\n  },\r\n  savePhoto(newPhoto) {\r\n    let formData = new FormData()\r\n    formData.append('image', newPhoto)\r\n    return instance.put(`profile/photo`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n  },\r\n  saveProfile(profile) {\r\n    return instance.put(`profile`, profile)\r\n  },\r\n}\r\n\r\nexport const authApi = {\r\n  submit() {\r\n    return instance.get(`auth/me`).then(response => {\r\n      return response.data\r\n    })\r\n  },\r\n  login(email, password, rememberMe = false, captcha) {\r\n    return instance.post(`auth/login`, {email, password, rememberMe,captcha})\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`)\r\n  },\r\n}\r\n\r\nexport const securityApi = {\r\n  getCaptcha(){\r\n    return instance.get(`security/get-captcha-url`)\r\n  }\r\n}\r\n","const ADD_NEW_MESSAGE = 'dialog/ADD-NEW-MESSAGE'\r\n\r\nlet initialState = {\r\n  messagesData: [\r\n    {id: 1, message: 'Hi', myMessage: true},\r\n    {id: 2, message: 'How are you?', myMessage: true},\r\n    {id: 3, message: 'All right?', myMessage: false},\r\n    {id: 4, message: 'Good luck!', myMessage: true},\r\n  ],\r\n  dialogsData: [\r\n    {id: 1, name: 'Vasya', src: 'https://ae01.alicdn.com/kf/HTB1UBilQFXXXXa6XFXXq6xXFXXXy.jpg'},\r\n    {\r\n      id: 2,\r\n      name: 'Petya',\r\n      src: 'https://www.pinclipart.com/picdir/middle/227-2277072_marvel-daredevil-clipart-vector-png-download.png',\r\n    },\r\n    {id: 3, name: 'Fedya', src: 'https://i.pinimg.com/originals/f0/cb/bf/f0cbbfd1f5de237d2b51ae420ccfc06e.png'},\r\n    {id: 4, name: 'Sasha', src: 'https://img.elo7.com.br/product/zoom/B0E008/escudo-homem-de-ferro-avulso-herois.jpg'},\r\n    {id: 5, name: 'Valera', src: 'https://cdn0.iconfinder.com/data/icons/famous-character-vol-1-colored/48/JD-14-512.png'},\r\n    {\r\n      id: 6,\r\n      name: 'Vanya',\r\n      src: 'https://cdn4.iconfinder.com/data/icons/famous-characters-add-on-vol-1-flat/48/Famous_Character_-_Add_On_1-16-512.png',\r\n    },\r\n  ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case ADD_NEW_MESSAGE:\r\n      let body =action.newMessageBody\r\n      return {\r\n        ...state,\r\n        newMessageBody: '',\r\n        messagesData: [...state.messagesData, {id: 4, myMessage: false, message: body}],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const sendNewMessage = (newMessageBody) => ({type: ADD_NEW_MESSAGE,newMessageBody})\r\n\r\nexport default dialogsReducer\r\n","export let updateObjectInArray = (items, itemId,objPropName, newObjProps) =>{\r\n  return items.map(u => {\r\n    if (u[objPropName] === itemId) {\r\n      return {...u, ...newObjProps}\r\n    }\r\n    return u\r\n  })\r\n}\r\n","import {userAPI} from '../API/api'\r\nimport {updateObjectInArray} from '../utils/objects-helpers'\r\n\r\nconst FOLLOW = 'users/FOLLOW'\r\nconst UNFOLLOW = 'users/UNFOLLOW'\r\nconst SET_USERS = 'users/SET_USERS'\r\nconst SET_TOTAL_COUNT_USERS = 'users/SET_TOTAL_COUNT_USERS'\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE'\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', {followed: true}),\r\n      }\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', {followed: false}),\r\n      }\r\n    case SET_CURRENT_PAGE:\r\n      return {...state, currentPage: action.currentPage}\r\n    case SET_USERS: {\r\n      return {...state, users: action.users}\r\n    }\r\n    case SET_TOTAL_COUNT_USERS:\r\n      return {...state, totalCount: action.count}\r\n    case TOGGLE_IS_FETCHING:\r\n      return {...state, isFetching: action.isFetching}\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching ?\r\n            [...state.followingInProgress, action.userId]\r\n            : state.followingInProgress.filter(id => id != action.userId),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setTotalUserCount = (count) => ({type: SET_TOTAL_COUNT_USERS, count})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n})\r\n\r\nexport const getUsers = (currentPage, pageSize) => async (dispatch) => {\r\n  dispatch(setCurrentPage(currentPage))\r\n  dispatch(toggleIsFetching(true))\r\n  let data = await userAPI.getUser(currentPage, pageSize)\r\n\r\n  dispatch(setUsers(data.items))\r\n  dispatch(setTotalUserCount(data.totalCount))\r\n  dispatch(toggleIsFetching(false))\r\n\r\n}\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethhod, actionCreator) => {\r\n  dispatch(toggleFollowingInProgress(true, userId))\r\n  let data = await apiMethhod(userId)\r\n  if (data.resultCode == 0) {\r\n    dispatch(actionCreator(userId))\r\n  }\r\n  dispatch(toggleFollowingInProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n  followUnfollowFlow(dispatch, userId, userAPI.followUser.bind(userAPI), followSuccess)\r\n\r\n}\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n  followUnfollowFlow(dispatch, userId, userAPI.unfollowUser.bind(userAPI), unfollowSuccess)\r\n\r\n}\r\n\r\n\r\nexport default usersReducer\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SideBarItem_item__3BxKv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__Kex66\",\"item\":\"NavBar_item__2AfsR\",\"active\":\"NavBar_active__yTYU5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1rcf4\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.7e632128.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"LoginPage_page__2V3E0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSumError\":\"Login_formSumError__2JUNI\",\"lastRow\":\"Login_lastRow__yuEP2\",\"loginContainer\":\"Login_loginContainer__2Z9oL\",\"loginTitle\":\"Login_loginTitle__1fLBx\",\"loginForm\":\"Login_loginForm__1Qp35\",\"loginInput\":\"Login_loginInput__28-pT\",\"button\":\"Login_button__2tLHa\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport classes from './SideBarItem.module.css'\r\n\r\nconst SideBarItem = (props) => {\r\n  return <div className={classes.item}>\r\n    <div>\r\n      <img src={props.src}/>\r\n    </div>\r\n    <p>{props.name}</p>\r\n  </div>\r\n}\r\n\r\nexport default SideBarItem\r\n","import React from 'react'\r\nimport classes from './SideBar.module.css'\r\nimport SideBarItem from './SideBarItem/SideBarItem'\r\n\r\nconst SideBar = (props) => {\r\n  let sideBarElements = props.state\r\n      .map(sideEl => <SideBarItem id={sideEl.id} key={sideEl.id} name={sideEl.name} src={sideEl.src}/>)\r\n  return <div className={classes.bar}>\r\n    <div>\r\n      <p>Friends</p>\r\n    </div>\r\n    <div className={classes.barItem}>\r\n      {sideBarElements}\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default SideBar\r\n","import React from 'react'\r\nimport SideBar from './SideBar'\r\nimport {connect} from 'react-redux'\r\nimport {compose} from 'redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    state: state.sideBarPage,\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(SideBar)\r\n","import React from 'react'\r\nimport classes from './NavBar.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport SideBarContainer from './SideBar/SideBarContainer'\r\n\r\nconst NavBar = (props) => {\r\n  return <nav className={classes.nav}>\r\n    <div className={classes.item}>\r\n      <NavLink activeClassName={classes.active} to='/profile'>Profile</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n      <NavLink activeClassName={classes.active} to='/dialogs'>Dialogs</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n      <NavLink activeClassName={classes.active} to='/news'>News</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n      <NavLink activeClassName={classes.active} to='/music'>Music</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n      <NavLink activeClassName={classes.active} to='/settings'>Settings</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n      <NavLink activeClassName={classes.active} to='/users'>Users</NavLink>\r\n    </div>\r\n    <div className={classes.sidebar}>\r\n      <SideBarContainer state={props.state}/>\r\n    </div>\r\n  </nav>\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport classes from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n  return <header className={classes.header}>\r\n    <img src=\"https://gonki-na-android.ru/uploads/posts/2015-03/1427120788_97374123.png\"/>\r\n\r\n    <div className={classes.loginBlock}>\r\n      {props.isAuth\r\n          ? <div>{props.login}  <button onClick={props.logout} className={classes.logout}> Logout</button></div>\r\n          : <NavLink to={'/login'} activeClassName={classes.active}>Login</NavLink>}\r\n    </div>\r\n  </header>\r\n}\r\n\r\nexport default Header\r\n","import {authApi, securityApi} from '../API/api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA'\r\nconst GET_CAPTCHA_URL = 'auth/GET_CAPTCHA_URL'\r\n\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  login: null,\r\n  email: null,\r\n  isAuth: false,\r\n  captchaUrl: null,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n    case GET_CAPTCHA_URL:\r\n      return {\r\n        ...state,\r\n        captchaUrl: action.captchaUrl,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}})\r\nexport const getCaptchaUrl = (captchaUrl) => ({type: GET_CAPTCHA_URL, captchaUrl})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let data = await authApi.submit()\r\n  if (data.resultCode === 0) {\r\n    let {id, email, login} = data.data\r\n    dispatch(setAuthUserData(id, email, login, true))\r\n  }\r\n\r\n}\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n  let response = await authApi.login(email, password, rememberMe, captcha)\r\n  if (response.data.resultCode === 0) {\r\n    //success\r\n    dispatch(getAuthUserData())\r\n  } else {\r\n    //error\r\n    if (response.data.resultCode === 10) {\r\n      dispatch(setCaptcha())\r\n    }\r\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Email or Password is wrong'\r\n    dispatch(stopSubmit('login', {_error: message}))\r\n  }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authApi.logout()\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false))\r\n  }\r\n}\r\n\r\nexport const setCaptcha = () => async (dispatch) => {\r\n  let response = await securityApi.getCaptcha()\r\n  const captchaUrl = response.data.url\r\n  dispatch(getCaptchaUrl(captchaUrl))\r\n}\r\n\r\nexport default authReducer\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../redux/authReducer'\r\nimport {compose} from 'redux'\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n  render() {\r\n    return <Header {...this.props}/>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logout}))\r\n    (HeaderContainer)\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../../redux/authReducer'\r\nimport {email, maxLengthCreator, minLengthCreator, required} from '../../utils/validators/validator'\r\nimport {Input} from '../common/Forms/FormsControl'\r\nimport {Redirect} from 'react-router-dom'\r\nimport classes from './Login.module.css'\r\n\r\n\r\nconst maxLength20 = maxLengthCreator(20)\r\nconst minLength2 = minLengthCreator(2)\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error,captchaUrl}) => {\r\n  return (\r\n      <form onSubmit={handleSubmit} className={classes.loginForm}>\r\n        <div><Field className={classes.loginInput} component={Input} validate={email} name={'email'} placeholder={`E-mail`}/>\r\n        </div>\r\n        <div><Field component={Input}\r\n                    validate={[required, maxLength20, minLength2]}\r\n                    type={`password`}\r\n                    name={'password'}\r\n                    placeholder={`Password`}\r\n                    className={classes.loginInput}\r\n        /></div>\r\n        <div className={classes.lastRow}><Field component={Input} name={'rememberMe'} type={'checkbox'}/> <span>Remember me</span>\r\n        </div>\r\n        {error && <div className={classes.formSumError}>\r\n          {error}\r\n        </div>}\r\n        <div>\r\n          {captchaUrl && <div>\r\n            <img alt={'captcha'} src={captchaUrl}/>\r\n            <Field component={Input}\r\n                   validate={[required]}\r\n                   name={'captcha'}\r\n                   placeholder={`Set security password`}\r\n                   className={classes.loginInput}\r\n            />\r\n          </div>}\r\n          <button onClick={handleSubmit} className={classes.button}>Login</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\nconst LoginReduxForm = reduxForm({\r\n  form: 'login',\r\n})(LoginForm)\r\n\r\n\r\nconst Login = ({login, isAuth, captchaUrl}) => {\r\n  const onSubmit = (formData) => {\r\n    login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n  }\r\n  if (isAuth) {\r\n    return <Redirect to={'/profile'}/>\r\n  }\r\n  return <div className={classes.loginContainer}>\r\n    <h1 className={classes.loginTitle}>Welcome to social network</h1>\r\n    <LoginReduxForm captchaUrl={captchaUrl} onSubmit={onSubmit}/>\r\n  </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl,\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)\r\n","import {getAuthUserData} from './authReducer'\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const initializedSuccess = () => ({\r\n  type: INITIALIZED_SUCCESS,\r\n})\r\nexport const initializeApp = () => (dispatch) =>{\r\n let promise =  dispatch(getAuthUserData())\r\n  Promise.all([promise]).then(()=>{\r\n    dispatch(initializedSuccess())\r\n  })\r\n}\r\n\r\n\r\nexport default appReducer\r\n","import React from 'react'\r\nimport classes from './LoginPage.module.css'\r\nimport Login from '../Login/Login'\r\n\r\nconst LoginPage = (props) => {\r\n  return <div className={classes.page}>\r\n    <Login/>\r\n  </div>\r\n}\r\n\r\nexport default LoginPage\r\n","let initialState = [{id: 1, artist: 'Little big', song: 'Skibidi'},\r\n    {id: 2, artist: 'The Hatters', song: 'Russian Style'},\r\n    {id: 3, artist: 'Chuck Berry', song: 'You never can tall'},\r\n    {id: 4, artist: 'Big Russian Boss', song: 'Big Russian Boss'},\r\n    {id: 5, artist: 'Ska-P', song: 'Ni-Fu-Ni-Fa'},\r\n    {id: 6, artist: 'Unknow', song: 'Unknow'},]\r\n\r\nconst musicReducer = (state = initialState, action) => {\r\n  return state\r\n};\r\nexport default musicReducer\r\n","let initialState= [\r\n  {id: 1, text: 'Vasya'},\r\n  {id: 2, text: 'Petya'},\r\n  {id: 3, text: 'Fedya'},\r\n  {id: 4, text: 'Sasha'},\r\n]\r\n\r\nconst newsReducer = (state = initialState, action) =>{\r\n\r\n\r\n  return state\r\n}\r\n\r\nexport default newsReducer;\r\n","let initialState = [{id: 1, name: 'Vasya', src: 'https://ae01.alicdn.com/kf/HTB1UBilQFXXXXa6XFXXq6xXFXXXy.jpg'},\r\n  {\r\n    id: 2,\r\n    name: 'Petya',\r\n    src: 'https://www.pinclipart.com/picdir/middle/227-2277072_marvel-daredevil-clipart-vector-png-download.png',\r\n  },\r\n  {id: 3, name: 'Fedya', src: 'https://i.pinimg.com/originals/f0/cb/bf/f0cbbfd1f5de237d2b51ae420ccfc06e.png'}]\r\n\r\nconst sideBraReducer = (state = initialState, action) => {\r\n\r\n\r\n  return state\r\n}\r\n\r\nexport default sideBraReducer\r\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\r\nimport profileReducer from './profileReducer'\r\nimport dialogsReducer from './dialogReducer'\r\nimport musicReducer from './musicReducer'\r\nimport newsReducer from './newsReducer'\r\nimport sideBraReducer from './sideBarReducer'\r\nimport usersReducer from './usersReducer'\r\nimport authReducer from './authReducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from './appReducer'\r\n\r\nlet reducers = combineReducers({\r\n  messagesPage: dialogsReducer,\r\n  profilePage: profileReducer,\r\n  music: musicReducer,\r\n  news: newsReducer,\r\n  sideBarPage: sideBraReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\nwindow.store = store\r\n\r\nexport default store\r\n","import React, {Component, Suspense} from 'react'\r\nimport './App.css'\r\nimport NavBar from './component/NavBar/NavBar'\r\nimport {HashRouter, Redirect, Route, Switch, withRouter} from 'react-router-dom'\r\nimport HeaderContainer from './component/Header/HeaderContainer'\r\nimport Login from './component/Login/Login'\r\nimport {connect, Provider} from 'react-redux'\r\nimport {compose} from 'redux'\r\nimport {initializeApp} from './redux/appReducer'\r\nimport Preloader from './component/common/preloader/Preloader'\r\nimport LoginPage from './component/LoginPage/LoginPage'\r\nimport store from './redux/reduxStore'\r\n\r\nconst DialogsContainer = React.lazy(() => import('./component/Dialogs/DialogsContainer'))\r\nconst MusicContainer = React.lazy(() => import('./component/Music/MusicContainer'))\r\nconst NewsContainer = React.lazy(() => import('./component/News/NewsContainer'))\r\nconst Setting = React.lazy(() => import('./component/Setting/Setting'))\r\nconst UsersContainer = React.lazy(() => import('./component/Users/UsersContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./component/Profile/ProfileContainer'))\r\n\r\nclass App extends Component {\r\n  catchAllUnhandleError = (reason, promise)=>{\r\n\r\n      alert('error')\r\n  }\r\n  componentDidMount() {\r\n    this.props.initializeApp()\r\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandleError);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandleError);\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.props.initialized) {\r\n      return <Preloader/>\r\n    }\r\n    if (!this.props.isAuth) {\r\n      return <LoginPage/>\r\n    }\r\n    return (\r\n        <div className=\"appWrapper\">\r\n          <HeaderContainer/>\r\n          <NavBar/>\r\n          <div className=\"appWrapperContent\">\r\n\r\n            <Suspense fallback={<Preloader/>}>\r\n              <Switch>\r\n                <Route exact path='/' render={()=>\r\n                       <Redirect to={'/profile'}/>}\r\n                />\r\n              <Route path='/profile/:userId?'\r\n                     render={() => <ProfileContainer/>}\r\n              />\r\n              <Route path='/dialogs'\r\n                     render={() => <DialogsContainer/>}\r\n              />\r\n              <Route path='/music'\r\n                     render={() => <MusicContainer/>}\r\n              />\r\n              <Route path='/settings'\r\n                     render={() => <Setting/>}\r\n              />\r\n              <Route path='/news'\r\n                     render={() => <NewsContainer/>}\r\n              />\r\n              <Route path='/users' render={() => <UsersContainer/>}/>\r\n                <Route path='*' render={() => <>Page not found</>}/>\r\n              </Switch>\r\n            </Suspense>\r\n            <Route path='/login' render={() => <Login/>}/>\r\n\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialized: state.app.initialized,\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n}\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App)\r\n\r\nconst SocNetApp = (props) => {\r\n  return (\r\n      <HashRouter>\r\n        <Provider store={store}>\r\n          <AppContainer/>\r\n        </Provider>\r\n      </HashRouter>)\r\n}\r\nexport default SocNetApp\r\n","import React from 'react'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport ReactDOM from 'react-dom'\r\nimport SocNetApp from './App'\r\n\r\n\r\nReactDOM.render(\r\n    <SocNetApp/>,\r\n    document.getElementById('root'),\r\n)\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n\r\n//data\r\n","export const required = value =>{\r\n  if(value) return undefined;\r\n   return 'Field is required';\r\n};\r\n\r\n\r\n\r\nexport const maxLengthCreator = maxLength => value =>{\r\n  if(value && value.length > maxLength) return `Max length is ${maxLength} symbol`;\r\n\r\n   return undefined;\r\n\r\n}\r\nexport const minLengthCreator = minLength => value  =>{\r\n  if(value && value.length < minLength) return `Min length is ${minLength} symbol`;\r\n\r\n  return undefined;\r\n\r\n}\r\nexport const email = value =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n        ? 'Invalid email address'\r\n        : undefined\r\n","import React from 'react'\r\nimport classes from './FormsControl.module.css'\r\n\r\n\r\nconst Element = Element => ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n      <div className={ classes.formControl + \" \" + (hasError ? classes.error : \"\") }>\r\n        <Element {...input} {...props} />\r\n        <div>\r\n          { hasError && <span> { meta.error } </span> }\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\nexport const Textarea = Element('textarea')\r\n\r\nexport const Input = Element('input')\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2sIav\",\"loginBlock\":\"Header_loginBlock__zVPbD\",\"active\":\"Header_active__1G5IF\",\"logout\":\"Header_logout__3cpn7\"};","import React from 'react'\r\nimport classes from './Preloader.module.css'\r\nimport preloader from '../../../assets/images/Spinner-1s-200px.svg'\r\n\r\nlet Preloader = (props) =>{\r\n  return <div className={classes.preloader}> <img src={preloader} alt='preloader'/> </div>\r\n}\r\n\r\nexport default Preloader\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barItem\":\"SideBar_barItem__2XK9y\",\"bar\":\"SideBar_bar__2pRuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControl_error__3H7NV\",\"formControl\":\"FormsControl_formControl__25PTg\"};","import {profileAPI} from '../API/api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst ADD_POST = 'profile/ADD-POST'\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE'\r\nconst SET_STATUS = 'profile/SET_STATUS'\r\nconst DELETE_POST = 'profile/DELETE_POST'\r\nconst SAVE_PHOTO_SUCCESS = 'profile/SAVE_PHOTO_SUCCESS'\r\nconst SAVE_PROFILE_SUCCESS = 'profile/SAVE_PROFILE_SUCCESS'\r\nconst CHANGE_PROFILE_SUCCESS = 'profile/CHANGE_PROFILE_SUCCESS'\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, message: 'Hello, this my first post', likeCount: 5},\r\n    {id: 2, message: 'I do that page for training my skiil on JS and React', likeCount: 10},\r\n  ],\r\n  profile: null,\r\n  status: '',\r\n  profileUpdate: false,\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let text = action.newPostBody\r\n      return {\r\n        ...state,\r\n        posts: [{id: 6, likeCount: Math.random().toFixed(1) * 10, message: text}, ...state.posts],\r\n      }\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      }\r\n    }\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      }\r\n    }\r\n    case DELETE_POST: {\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(p => p.id !== action.id),\r\n      }\r\n    }\r\n    case SAVE_PHOTO_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        profile: {...state.profile, photos: action.photos},\r\n      }\r\n    }\r\n    case SAVE_PROFILE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        profile: {...action.profile},\r\n      }\r\n    }\r\n    case CHANGE_PROFILE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        profileUpdate: action.profileUpdate,\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const addPost = (newPostBody) => ({type: ADD_POST, newPostBody})\r\nexport const deletePost = (id) => ({type: DELETE_POST, id})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\nexport const changeProfileSuccess = (profileUpdate) => ({type: CHANGE_PROFILE_SUCCESS, profileUpdate})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let data = await profileAPI.setUser(userId)\r\n  dispatch(setUserProfile(data))\r\n}\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n  let data = await profileAPI.getStatus(userId)\r\n  dispatch(setStatus(data))\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n try {\r\n    let response = await profileAPI.updateStatus(status)\r\n\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setStatus(status))\r\n    }\r\n  } catch (error) {\r\n   console.log(error)\r\n }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n  let response = await profileAPI.savePhoto(file)\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(savePhotoSuccess(response.data.data.photos))\r\n  }\r\n}\r\nexport const saveProfile = (file) => async (dispatch, getState) => {\r\n  dispatch(changeProfileSuccess(true))\r\n  const userId = getState().auth.userId\r\n  let response = await profileAPI.saveProfile(file)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getUserProfile(userId))\r\n    dispatch(changeProfileSuccess(false))\r\n  } else {\r\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Incorrect Data'\r\n    dispatch(stopSubmit('profileDataStatus', {_error: message}))\r\n    dispatch(changeProfileSuccess(false))\r\n    return Promise.reject(response.data.messages[0])\r\n  }\r\n}\r\n\r\nexport default profileReducer\r\n"],"sourceRoot":""}